server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # 1) Логи Docker-контейнеров (FastAPI, Spring, прочие)
  - job_name: docker_containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        filters:
          - name: name
            values: ["content-processor", "notifications", "ms_users_web", "app"]
    relabel_configs:
      # service из Compose
      - source_labels: [__meta_docker_container_label_com_docker_compose_service]
        target_label: service
      # оригинальный путь к логу в Docker (внутрянка)
      - source_labels: [__meta_docker_container_log_path]
        target_label: __path__
      # имя контейнера
      - source_labels: [__meta_docker_container_name]
        target_label: container

  # 2) Логи OpenResty из stdout → json → lейблы для Dashboard
  - job_name: openresty_stdout
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        filters:
          - name: name
            values: ["api-gateway"]
    relabel_configs:
      # выставляем host в Dashboards-переменную
      - source_labels: [__meta_docker_container_name]
        target_label: host
      # форсируем filename, как в дашборде:
      - replacement: "/var/log/nginx/json_access.log"
        target_label: filename
      # путь к Docker-логу
      - source_labels: [__meta_docker_container_log_path]
        target_label: __path__

    pipeline_stages:
      - json:
          expressions:
            remote_addr: remote_addr
            request_uri: request_uri
            status: status
            http_user_agent: http_user_agent
            http_referer: http_referer
            body_bytes_sent: body_bytes_sent
            request_time: request_time
      - labels:
          remote_addr:
          request_uri:
          status:
          http_user_agent:
          http_referer:
          body_bytes_sent:
          request_time:

